{
  "name": "BidirectionalStream",
  "defined": {
    "spec": {
      "title": "WebTransport",
      "url": "https://w3c.github.io/webtransport/"
    },
    "fragment": "[ Exposed=(Window,Worker) ]\ninterface BidirectionalStream {\n};",
    "href": "https://w3c.github.io/webtransport/#bidirectionalstream"
  },
  "extended": [
    {
      "spec": {
        "title": "WebTransport",
        "url": "https://w3c.github.io/webtransport/"
      },
      "fragment": "BidirectionalStream includes OutgoingStream;"
    },
    {
      "spec": {
        "title": "WebTransport",
        "url": "https://w3c.github.io/webtransport/"
      },
      "fragment": "BidirectionalStream includes IncomingStream;"
    }
  ],
  "inheritance": null,
  "includes": [
    {
      "name": "OutgoingStream",
      "defined": {
        "spec": {
          "title": "WebTransport",
          "url": "https://w3c.github.io/webtransport/"
        },
        "fragment": "[ Exposed=(Window,Worker) ]\ninterface mixin OutgoingStream {\n  readonly attribute WritableStream writable;\n  readonly attribute Promise<StreamAbortInfo> writingAborted;\n  undefined abortWriting(optional StreamAbortInfo abortInfo = {});\n};",
        "href": "https://w3c.github.io/webtransport/#outgoingstream"
      },
      "extended": [],
      "inheritance": null,
      "includes": []
    },
    {
      "name": "IncomingStream",
      "defined": {
        "spec": {
          "title": "WebTransport",
          "url": "https://w3c.github.io/webtransport/"
        },
        "fragment": "[ Exposed=(Window,Worker) ]\ninterface mixin IncomingStream {\n  /* a ReadableStream of Uint8Array */\n  readonly attribute ReadableStream readable;\n  readonly attribute Promise<StreamAbortInfo> readingAborted;\n  undefined abortReading(optional StreamAbortInfo abortInfo = {});\n};",
        "href": "https://w3c.github.io/webtransport/#incomingstream"
      },
      "extended": [],
      "inheritance": null,
      "includes": []
    }
  ]
}