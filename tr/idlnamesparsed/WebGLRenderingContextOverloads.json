{
  "name": "WebGLRenderingContextOverloads",
  "defined": {
    "spec": {
      "title": "WebGL Specification",
      "url": "https://www.khronos.org/registry/webgl/specs/latest/1.0/"
    },
    "fragment": "interface mixin WebGLRenderingContextOverloads\n{\n    void bufferData(GLenum target, GLsizeiptr size, GLenum usage);\n    void bufferData(GLenum target, [AllowShared] BufferSource? data, GLenum usage);\n    void bufferSubData(GLenum target, GLintptr offset, [AllowShared] BufferSource data);\n\n    void compressedTexImage2D(GLenum target, GLint level, GLenum internalformat,\n                              GLsizei width, GLsizei height, GLint border,\n                              [AllowShared] ArrayBufferView data);\n    void compressedTexSubImage2D(GLenum target, GLint level,\n                                 GLint xoffset, GLint yoffset,\n                                 GLsizei width, GLsizei height, GLenum format,\n                                 [AllowShared] ArrayBufferView data);\n\n    void readPixels(GLint x, GLint y, GLsizei width, GLsizei height,\n                    GLenum format, GLenum type, [AllowShared] ArrayBufferView? pixels);\n\n    void texImage2D(GLenum target, GLint level, GLint internalformat,\n                    GLsizei width, GLsizei height, GLint border, GLenum format,\n                    GLenum type, [AllowShared] ArrayBufferView? pixels);\n    void texImage2D(GLenum target, GLint level, GLint internalformat,\n                    GLenum format, GLenum type, TexImageSource source); // May throw DOMException\n\n    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\n                       GLsizei width, GLsizei height,\n                       GLenum format, GLenum type, [AllowShared] ArrayBufferView? pixels);\n    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\n                       GLenum format, GLenum type, TexImageSource source); // May throw DOMException\n\n    void uniform1fv(WebGLUniformLocation? location, Float32List v);\n    void uniform2fv(WebGLUniformLocation? location, Float32List v);\n    void uniform3fv(WebGLUniformLocation? location, Float32List v);\n    void uniform4fv(WebGLUniformLocation? location, Float32List v);\n\n    void uniform1iv(WebGLUniformLocation? location, Int32List v);\n    void uniform2iv(WebGLUniformLocation? location, Int32List v);\n    void uniform3iv(WebGLUniformLocation? location, Int32List v);\n    void uniform4iv(WebGLUniformLocation? location, Int32List v);\n\n    void uniformMatrix2fv(WebGLUniformLocation? location, GLboolean transpose, Float32List value);\n    void uniformMatrix3fv(WebGLUniformLocation? location, GLboolean transpose, Float32List value);\n    void uniformMatrix4fv(WebGLUniformLocation? location, GLboolean transpose, Float32List value);\n};"
  },
  "extended": [],
  "inheritance": null,
  "includes": []
}