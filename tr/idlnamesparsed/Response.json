{
  "name": "Response",
  "defined": {
    "spec": {
      "title": "Fetch Standard",
      "url": "https://fetch.spec.whatwg.org/"
    },
    "fragment": "[Exposed=(Window,Worker)]interface Response {\n  constructor(optional BodyInit? body = null, optional ResponseInit init = {});\n\n  [NewObject] static Response error();\n  [NewObject] static Response redirect(USVString url, optional unsigned short status = 302);\n\n  readonly attribute ResponseType type;\n\n  readonly attribute USVString url;\n  readonly attribute boolean redirected;\n  readonly attribute unsigned short status;\n  readonly attribute boolean ok;\n  readonly attribute ByteString statusText;\n  [SameObject] readonly attribute Headers headers;\n\n  [NewObject] Response clone();\n};",
    "href": "https://fetch.spec.whatwg.org/#response"
  },
  "extended": [
    {
      "spec": {
        "title": "Fetch Standard",
        "url": "https://fetch.spec.whatwg.org/"
      },
      "fragment": "Response includes Body;"
    }
  ],
  "inheritance": null,
  "includes": [
    {
      "name": "Body",
      "defined": {
        "spec": {
          "title": "Fetch Standard",
          "url": "https://fetch.spec.whatwg.org/"
        },
        "fragment": "interface mixin Body {\n  readonly attribute ReadableStream? body;\n  readonly attribute boolean bodyUsed;\n  [NewObject] Promise<ArrayBuffer> arrayBuffer();\n  [NewObject] Promise<Blob> blob();\n  [NewObject] Promise<FormData> formData();\n  [NewObject] Promise<any> json();\n  [NewObject] Promise<USVString> text();\n};",
        "href": "https://fetch.spec.whatwg.org/#body"
      },
      "extended": [],
      "inheritance": null,
      "includes": []
    }
  ]
}