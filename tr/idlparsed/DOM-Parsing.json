{
  "spec": {
    "title": "DOM Parsing and Serialization",
    "url": "https://www.w3.org/TR/DOM-Parsing/"
  },
  "idlparsed": {
    "jsNames": {
      "constructors": {},
      "functions": {}
    },
    "idlNames": {
      "DOMParser": {
        "fragment": "[Constructor]\ninterface DOMParser {\n    [NewObject]\n    Document parseFromString (DOMString str, SupportedType type);\n};",
        "type": "interface",
        "name": "DOMParser",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "parseFromString",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "Document"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "str",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "type",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "SupportedType"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "NewObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Constructor",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false
      },
      "XMLSerializer": {
        "fragment": "[Constructor]\ninterface XMLSerializer {\n    DOMString serializeToString (Node root);\n};",
        "type": "interface",
        "name": "XMLSerializer",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "serializeToString",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "root",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Node"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Constructor",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false
      }
    },
    "idlExtendedNames": {
      "Element": [
        {
          "fragment": "partial interface Element {\n    [CEReactions, TreatNullAs=EmptyString]\n                    attribute DOMString innerHTML;\n    [CEReactions, TreatNullAs=EmptyString]\n                    attribute DOMString outerHTML;\n    [CEReactions]\n    void insertAdjacentHTML (DOMString position, DOMString text);\n};",
          "type": "interface",
          "name": "Element",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "innerHTML",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "DOMString"
              },
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "CEReactions",
                  "rhs": null,
                  "arguments": []
                },
                {
                  "type": "extended-attribute",
                  "name": "TreatNullAs",
                  "rhs": {
                    "type": "identifier",
                    "value": "EmptyString"
                  },
                  "arguments": []
                }
              ],
              "special": "",
              "readonly": false
            },
            {
              "type": "attribute",
              "name": "outerHTML",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "DOMString"
              },
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "CEReactions",
                  "rhs": null,
                  "arguments": []
                },
                {
                  "type": "extended-attribute",
                  "name": "TreatNullAs",
                  "rhs": {
                    "type": "identifier",
                    "value": "EmptyString"
                  },
                  "arguments": []
                }
              ],
              "special": "",
              "readonly": false
            },
            {
              "type": "operation",
              "name": "insertAdjacentHTML",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "void"
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "position",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "DOMString"
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                },
                {
                  "type": "argument",
                  "name": "text",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "DOMString"
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                }
              ],
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "CEReactions",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": ""
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ],
      "Range": [
        {
          "fragment": "partial interface Range {\n    [CEReactions, NewObject]\n    DocumentFragment createContextualFragment (DOMString fragment);\n};",
          "type": "interface",
          "name": "Range",
          "inheritance": null,
          "members": [
            {
              "type": "operation",
              "name": "createContextualFragment",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "DocumentFragment"
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "fragment",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "DOMString"
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                }
              ],
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "CEReactions",
                  "rhs": null,
                  "arguments": []
                },
                {
                  "type": "extended-attribute",
                  "name": "NewObject",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": ""
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ]
    },
    "globals": {},
    "exposed": {},
    "dependencies": {
      "DOMParser": [
        "Document",
        "SupportedType"
      ],
      "XMLSerializer": [
        "Node"
      ],
      "Element": [
        "void"
      ],
      "Range": [
        "DocumentFragment"
      ]
    },
    "externalDependencies": [
      "Document",
      "SupportedType",
      "Node",
      "Element",
      "void",
      "Range",
      "DocumentFragment"
    ],
    "hasObsoleteIdl": false
  }
}