{
  "spec": {
    "title": "ECMAScript class static initialization blocks",
    "url": "https://tc39.es/proposal-class-static-block/"
  },
  "links": {
    "https://github.com/rbuckton/proposal-class-static-block": [],
    "https://tc39.es/ecma262/": [
      "sec-list-and-record-specification-type",
      "function-object",
      "assert",
      "sec-call",
      "prod-Block",
      "prod-grammar-notation-StatementList",
      "prod-StatementListItem",
      "prod-Statement",
      "prod-LabelledStatement",
      "prod-Declaration",
      "sec-static-semantics-boundnames",
      "prod-CaseBlock",
      "prod-CaseClauses",
      "prod-DefaultClause",
      "prod-CaseClause",
      "prod-Expression",
      "prod-LabelIdentifier",
      "prod-LabelledItem",
      "prod-FunctionDeclaration",
      "prod-FunctionStatementList",
      "sec-static-semantics-toplevellexicallydeclarednames",
      "prod-ConciseBody",
      "prod-ExpressionBody",
      "prod-AsyncConciseBody",
      "prod-ScriptBody",
      "prod-Script",
      "prod-Module",
      "prod-ModuleItemList",
      "prod-ModuleItem",
      "prod-ImportDeclaration",
      "prod-ExportDeclaration",
      "prod-VariableStatement",
      "sec-static-semantics-declarationpart",
      "sec-static-semantics-toplevellexicallyscopeddeclarations",
      "prod-ExportFromClause",
      "prod-FromClause",
      "prod-NamedExports",
      "prod-HoistableDeclaration",
      "prod-ClassDeclaration",
      "prod-AssignmentExpression",
      "prod-EmptyStatement",
      "prod-ExpressionStatement",
      "prod-ContinueStatement",
      "prod-BreakStatement",
      "prod-ReturnStatement",
      "prod-grammar-notation-ThrowStatement",
      "prod-DebuggerStatement",
      "prod-VariableDeclarationList",
      "prod-annexB-IfStatement",
      "prod-DoWhileStatement",
      "prod-grammar-notation-WhileStatement",
      "prod-grammar-notation-ForStatement",
      "prod-LexicalDeclaration",
      "prod-annexB-ForInOfStatement",
      "prod-LeftHandSideExpression",
      "prod-ForDeclaration",
      "prod-ForBinding",
      "sec-initializers-in-forin-statement-heads",
      "prod-WithStatement",
      "prod-SwitchStatement",
      "prod-TryStatement",
      "prod-Catch",
      "prod-Finally",
      "prod-CatchParameter",
      "sec-static-semantics-toplevelvardeclarednames",
      "prod-grammar-notation-VariableDeclaration",
      "sec-static-semantics-toplevelvarscopeddeclarations",
      "sec-static-semantics-stringvalue",
      "prod-BreakableStatement",
      "prod-IterationStatement",
      "sec-syntactic-grammar",
      "prod-BindingIdentifier",
      "prod-FormalParameters",
      "prod-FunctionBody",
      "prod-FunctionExpression",
      "prod-GeneratorDeclaration",
      "prod-GeneratorBody",
      "prod-GeneratorExpression",
      "prod-AsyncGeneratorDeclaration",
      "prod-AsyncGeneratorBody",
      "prod-AsyncGeneratorExpression",
      "prod-AsyncFunctionDeclaration",
      "prod-AsyncFunctionBody",
      "prod-AsyncFunctionExpression",
      "prod-ClassTail",
      "prod-ClassHeritage",
      "prod-ClassBody",
      "prod-PropertyName",
      "prod-ArrowFunction",
      "prod-ArrowParameters",
      "prod-NewTarget",
      "prod-SuperProperty",
      "prod-SuperCall",
      "prod-CoverParenthesizedExpressionAndArrowParameterList",
      "sec-static-semantics-coveredformalslist",
      "prod-AsyncArrowFunction",
      "prod-AsyncArrowBindingIdentifier",
      "prod-CoverCallExpressionAndAsyncArrowHead",
      "sec-async-arrow-function-definitions-static-semantics-CoveredAsyncArrowHead",
      "prod-PropertyDefinition",
      "prod-MethodDefinition",
      "prod-LiteralPropertyName",
      "prod-IdentifierName",
      "prod-MemberExpression",
      "prod-ReservedWord",
      "prod-CallExpression",
      "prod-OptionalChain",
      "prod-ComputedPropertyName",
      "prod-UniqueFormalParameters",
      "prod-PropertySetParameterList",
      "prod-GeneratorMethod",
      "prod-AsyncGeneratorMethod",
      "prod-ClassElementList",
      "prod-ClassElement",
      "prod-AsyncMethod",
      "prod-IdentifierReference",
      "prod-StringLiteral",
      "sec-static-semantics-sv",
      "prod-annexB-NumericLiteral",
      "sec-numericvalue",
      "sec-tostring",
      "sec-runtime-semantics-evaluatefunctionbody",
      "sec-runtime-semantics-evaluateconcisebody",
      "sec-runtime-semantics-evaluategeneratorbody",
      "sec-runtime-semantics-evaluateasyncgeneratorbody",
      "sec-runtime-semantics-evaluateasyncfunctionbody",
      "sec-runtime-semantics-evaluateasyncconcisebody",
      "prod-Initializer",
      "sec-isanonymousfunctiondefinition",
      "sec-runtime-semantics-namedevaluation",
      "sec-getvalue",
      "sec-completion-record-specification-type",
      "sec-functiondeclarationinstantiation",
      "prod-UnaryExpression",
      "prod-AwaitExpression",
      "running-execution-context",
      "sec-ordinaryfunctioncreate",
      "sec-properties-of-the-function-prototype-object",
      "sec-makemethod",
      "sec-runtime-semantics-methoddefinitionevaluation",
      "constructor",
      "sec-newdeclarativeenvironment",
      "sec-properties-of-the-object-prototype-object",
      "sec-isconstructor",
      "sec-get-o-p",
      "sec-ordinaryobjectcreate",
      "sec-static-semantics-constructormethod",
      "sec-createbuiltinfunction",
      "sec-runtime-semantics-definemethod",
      "sec-makeclassconstructor",
      "sec-setfunctionname",
      "sec-makeconstructor",
      "sec-createmethodproperty",
      "sec-runtime-semantics-bindingclassdeclarationevaluation",
      "sec-normalcompletion",
      "prod-ClassExpression",
      "sec-algorithm-conventions-syntax-directed-operations"
    ],
    "https://arai-a.github.io/ecma262-compare/?pr=1668&id=sec-class-definitions-static-semantics-containsarguments": [
      "sec-class-definitions-static-semantics-containsarguments"
    ]
  }
}